<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:oxm="http://www.springframework.org/schema/oxm" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
                        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
                        http://www.springframework.org/schema/oxm http://www.springframework.org/schema/oxm/spring-oxm-1.5.xsd
                        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-3.0.xsd">
	<!-- 注解扫描 -->
	<context:component-scan base-package="service" />
	<!-- 
	<context:component-scan base-package="com.baobaotao.anno" resource-pattern="anno/*.class"> 
		<context:include-filter type="regex" expression="com\.baobaotao\.anno.*" /> 
		<context:exclude-filter type="aspectj" expression="com.baobaotao..*Controller+" /> 
	</context:component-scan>
	 -->

	<!-- Spring MVC 配置 HttpMessageConverter & conversion-service -->
	<mvc:annotation-driven />

	<!-- 拦截器 -->
	<!-- 
	<mvc:interceptors> 
		<mvc:interceptor> 
			<mapping path="/secure/*" /> 
			<bean class="com.baobaotao.web.MyInterceptor" /> 
		</mvc:interceptor> 
	</mvc:interceptors> 
	-->
	
	<!-- 属性文件替换 -->
    <!-- 
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" 
    	p:location="classpath:com/placeholder/jdbc.properties"
    	p:locations="list"
    	p:fileEncoding="utf-8" />
    
    <context:property-placeholder location="classpath:com/placeholder/jdbc.properties" /> 
    -->
    
    <!-- 国际化资源 -->
    <!-- 
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    	<property name="basenames">
    		<list>
    			<value>i18n/resource</value>
    		</list>
    	</property>
    </bean>
     -->
     
    <!-- 基于@Aspectj切面的驱动器 -->
    <!-- 
    <aop:aspectj-autoproxy />
     -->
     
     <!-- JNDI数据源 -->
    <!-- <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/bbt" /> -->
    
    <!-- 事务管理start -->
    <!-- 
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
    	p:dataSource-ref="dataSource" />
    
    <aop:config>
    	<aop:pointcut id="serviceMethod" expression="execution(* com.service.*Forum.*(..))" />
    	<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
    </aop:config>
    
    <tx:advice id="txAdvice" transaction-manager="txManager">
    	<tx:attributes>
    		<tx:method name="get*" read-only="false" />
    		<tx:method name="add*" rollback-for="Exception" />
    		<tx:method name="update*" />
    	</tx:attributes>
    </tx:advice>
     -->
     
     <!-- 注解的方式管理事务 -->
    <!-- <tx:annotation-driven transaction-manager="txManager" /> -->
    <!-- 事务管理end -->
    
    <!-- Schema配置AOP -->
    <!-- 
    <aop:config proxy-target-class="true">
    	<aop:pointcut id="serviceMethod" expression="execution(* com..*.Waiter.greetTo(..))" />	
    	<aop:advisor advice-ref="testAdvice" pointcut-ref="" />
    </aop:config>
    <bean id="testAdvice" class="com.baobaotao.schema.TestBeforeAdvice" />
     -->
     
     <!-- Bean的声明周期 -->
     <!-- 
	<bean id="car" class="ioc.Car" init-method="myInit"
		destroy-method="myDestory" p:brand="红旗CA72" p:maxSpeed="200" scope="singleton" />

	<bean id="myBeanPostProcessor" class="ioc.MyBeanPostProcessor" />
	<bean id="myBeanFactoryPostProcessor" class="ioc.MyBeanFactoryPostProcessor" />

	<bean class="ioc.event.MailSendListener" />
	<bean id="mailSender" class="ioc.event.MailSender" />
	 --> 
</beans:beans>