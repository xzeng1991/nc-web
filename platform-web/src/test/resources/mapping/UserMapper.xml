<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nc.platform.persistence.repository.UserDao">
	<!-- cache 设置 -->
	<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>
	
	<resultMap id="userResultMap" type="User">
		<id property="id" column="user_id" />
		<result property="userName" column="user_name" />
		<result property="password" column="password" />
	</resultMap>
	
	<resultMap id="complexResultMap" type="Blog">
		<constructor>
			<idArg column="blog_id" javaType="int" />
			<arg column="userName" javaType="String" />
		</constructor>
		<result property="title" column="blog_title" />
		<association property="author" javaType="Author">
			<id property="id" column="author_id" />
			<result property="userName" column="user_name" />
			<result property="email" column="email" />
			<result property="bio" column="bio" />
		</association>
		<collection property="posts" ofType="Post">
			<id property="id" column="post_id" />
			<result property="subject" column="post_subject" />
			<discriminator javaType="int" column="draft">
				<case value="1" resultType="DraftPost" />
			</discriminator>
		</collection>
	</resultMap>
	
	<!-- Nested select start -->
	<resultMap id="blogResult" type="Blog">
		<association property="author" column="blog_author_id" javaType="Author" select="selectAuthor" />
	</resultMap>
	<select id="selectBlog" parameterType="int" resultMap="blogResult" >
		select * from blog where Id = #{id}
	</select>
	<select id="selectAuthor" parameterType="int" resultType="Author">
		select * from Author where Id = #{id}
	</select>
	<!-- Nested select end -->
	
	<!-- Nested Results start -->
	<select id="selectBlog" parameterType="int" resultMap="blogResult">
		select
			B.id as blog_id,
			B.title as blog_title,
			B.author_id as blog_author_id,
			A.id as author_id,
			A.userName as author_userName
		from Blog B left join Author A on B.author_id = A.id
		where B.id = #{id}
	</select>
	<resultMap id="blogResult" type="Blog">
		<id property="id" column="author_id" />
		<result property="title" column="blog_title" />
		<association property="author" javaType="Author" resultMap="authorResult" />
	</resultMap>
	<resultMap id="authorResult" type="Author">
		<id property="id" column="author_id" />
		<result property="userName" column="user_name" />
		<result property="email" column="email" />
		<result property="bio" column="bio" />
	</resultMap>
	<!-- Nested Results end -->
	
	<!-- Nested collection select start -->
	<resultMap id="blogResult" type="Blog">
		<collection property="posts" javaType="ArrayList" column="blog_id" ofType="Post" select="selectPosts" />
	</resultMap>
	<select id="selectBlog" parameterType="int" resultMap="blogResult" >
		select * from blog where id = #{id}
	</select>
	<select id="selectPosts" parameterType="int" resultType="Post">
		select * from post where blog_id = #{id}
	</select>
	<!-- Nested collection select end -->
	
	<!-- Nested collection Results start -->
	<select id="selectBlog" parameterType="int" resultMap="blogResult">
		select
			B.id as blog_id,
			B.title as blog_title,
			B.author_id as blog_author_id,
			P.id as post_id,
			P.subject as post_subject
		from Blog B left join Post P on B.id = P.blog_id
		where B.id = #{id}
	</select>
	<resultMap id="blogResult" type="Blog">
		<id property="id" column="author_id" />
		<result property="title" column="blog_title" />
		<collection property="posts" ofType="Post" >
			<id property="id" column="post_id" />
			<result property="subject" column="post_subject" />
			<result property="body" column="post_body" />
		</collection>
	</resultMap>
	<!-- Nested collection Results end -->
	
	<resultMap id="vehicleResult" type="Vehicle">
		<id property="id" column="id" />
		<result property="vin" column="vin" />
		<result property="year" column="year" />
		<result property="make" column="make" />
		<result property="model" column="model" />
		<discriminator javaType="int" column="vehicle_type">
			<case value="1" resultMap="carResult" />
			<case value="2" resultMap="truckResult" />
			<case value="3" resultMap="vanResult" />
		</discriminator>
	</resultMap>
	
	<sql id="userColumns">id,userName,password</sql>
	
	<!-- keyProperty对应java Bean; keyColumn对应table -->
	<insert id="add" parameterType="User" keyProperty="id" keyColumn="id" useGeneratedKeys="true">
		insert into User(userName, password)
		values( #{userName}, #{password} )
	</insert>
	<!-- 
	<insert id="add2" parameterType="User" >
		<selectKey keyProperty="id" resultType="int" order="BEFORE">
			select CAST(RANDOM() * 1000000 as INTEGER) a from SYSIBM.SYSDUMMY
		</selectKey>
		insert into User(id, userName, password)
		values( #{id}, #{userName}, #{password} )
	</insert>
	 -->
	 
	<update id="updateUser" parameterType="User" >
		update User set
			userName = #{userName},
			password = #{password}
		where id = #{id}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from User where id = #{id}
	</delete>
	
	<select id="queryById" parameterType="int" resultType="hashmap" fetchSize="256" timeout="10000">
		select * from User where ID = #{id, javaType=int, jdbcType=NUMERIC}
	</select>
	
	<!-- use <sql> -->
	<select id="queryUserById" parameterType="int" resultType="hashmap" >
		select <include refid="userColumns" /> from User where ID = #{id}
	</select>
	
	<select id="queryUserList" parameterType="int" resultType="hashmap" >
		select <include refid="userColumns" /> from User order by ${id}
	</select>
	
	<!-- use resultMap -->
	<select id="queryUserList" parameterType="int" resultMap="userResultMap" >
		select <include refid="userColumns" /> from User order by ${id}
	</select>
</mapper>